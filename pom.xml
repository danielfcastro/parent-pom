<?xml version='1.0' encoding='UTF-8'?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>br.com.danielfcastro</groupId>
	<artifactId>parent-pom</artifactId>
	<version>1.0</version>
	<packaging>pom</packaging>
	<name>Parent POM</name>
	<description>Parent POM para projetos JAVA.</description>
	<properties>

		<!-- **************** -->
		<!-- Plugins versions -->
		<!-- **************** -->
		<version.assembly.plugin>3.1.0</version.assembly.plugin>
		<version.archetype.plugin>3.0.1</version.archetype.plugin>
		<version.buildnumber.plugin>1.4</version.buildnumber.plugin>
		<version.checkstyle.plugin>2.17</version.checkstyle.plugin>
		<version.clean.plugin>3.0.0</version.clean.plugin>
		<version.dependency.plugin>3.0.2</version.dependency.plugin>
		<version.deploy.plugin>2.8.2</version.deploy.plugin>
		<version.ear.plugin>2.10.1</version.ear.plugin>
		<version.failsafe.plugin>${version.surefire.plugin}</version.failsafe.plugin>
		<version.findbugs.plugin>3.0.5</version.findbugs.plugin>
		<version.jacoco-maven-plugin>0.7.9</version.jacoco-maven-plugin>
		<version.jar.plugin>3.0.2</version.jar.plugin>
		<version.javadoc.plugin>3.0.0-M1</version.javadoc.plugin>
		<version.javancss.plugin>2.1</version.javancss.plugin>
		<version.install.plugin>2.5.2</version.install.plugin>
		<version.maven-compiler-plugin>3.7.0</version.maven-compiler-plugin>
		<version.maven-clean-plugin>3.0.0</version.maven-clean-plugin>
		<version.maven-plugin>2.5</version.maven-plugin>
		<version.maven-scm-plugin>1.9</version.maven-scm-plugin>
		<version.maven-surefire-plugin>2.20</version.maven-surefire-plugin>
		<version.resources.plugin>3.0.2</version.resources.plugin>
		<version.site.plugin>3.6</version.site.plugin>
		<version.sonar-maven-plugin>3.2</version.sonar-maven-plugin>
		<version.source.plugin>3.0.1</version.source.plugin>
		<version.surefire.plugin>2.20.1</version.surefire.plugin>
		<version.war.plugin>3.1.0</version.war.plugin>

		<!-- ************** -->
		<!-- Build settings -->
		<!-- ************** -->

		<!-- Cross plugins settings -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<!-- maven-compiler-plugin -->

		<maven.compiler.target>1.8</maven.compiler.target>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.testTarget>${maven.compiler.target}</maven.compiler.testTarget>
		<maven.compiler.testSource>${maven.compiler.source}</maven.compiler.testSource>
		<!-- Options to override the compiler arguments directly on the compiler 
			argument line to separate between what the IDE understands as the source 
			level and what the Maven compiler actually use. -->

		<maven.compiler.argument.target>${maven.compiler.target}</maven.compiler.argument.target>
		<maven.compiler.argument.source>${maven.compiler.source}</maven.compiler.argument.source>
		<maven.compiler.argument.testTarget>${maven.compiler.testTarget}</maven.compiler.argument.testTarget>
		<maven.compiler.argument.testSource>${maven.compiler.testSource}</maven.compiler.argument.testSource>

		<!-- maven-enforcer-plugin -->
		<maven.min.version>3.2.5</maven.min.version>

		<jdk.min.version>${maven.compiler.argument.source}</jdk.min.version>
		<!-- maven-idea-plugin & maven-eclipse-plugin -->

		<downloadSources>true</downloadSources>
		<!-- maven-pmd-plugin -->

		<targetJdk>${maven.compiler.argument.target}</targetJdk>
		<!-- maven-release-plugin -->

		<useReleaseProfile>false</useReleaseProfile>
		<arguments>-Pjboss-release</arguments>

		<!-- maven-assembly-plugin -->
		<sourceReleaseAssemblyDescriptor>source-release</sourceReleaseAssemblyDescriptor>
		<version.checkstyle>8.2</version.checkstyle>

		<!-- exposed additional params for javadoc, such as Xlint -->
		<javadoc.additional.params />

		<!-- dependencies -->
		<version.application-parameter>2.0.0</version.application-parameter>
		<version.cobol-connection>2.1.0</version.cobol-connection>
		<version.healthcheck>1.0.0</version.healthcheck>

		<!-- tests dependencies -->
		<version.junit>4.11</version.junit>
		<version.hamcrest>1.3</version.hamcrest>
		<version.hamcrest-bean>1.0.11</version.hamcrest-bean>
		<version.powermock>1.6.5</version.powermock>

		<!-- jacoco -->
		<jacoco.it.execution.data.file>${project.build.directory}/jacoco-it.exec</jacoco.it.execution.data.file>
		<jacoco.ut.execution.data.file>${project.build.directory}/jacoco.exec</jacoco.ut.execution.data.file>
	</properties>
	<build>
		<pluginManagement>
			<!-- All plugins ordered by shortname (antrun, assembly ...) -->
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${version.assembly.plugin}</version>
					<configuration>
						<archive>
							<index>true</index>
							<manifest>
								<addDefaultSpecificationEntries>
									true
								</addDefaultSpecificationEntries>
								<addDefaultImplementationEntries>
									true
								</addDefaultImplementationEntries>
							</manifest>
							<manifestEntries>
								<Implementation-URL>${project.url}</Implementation-URL>
								<Java-Version>${java.version}</Java-Version>
								<Java-Vendor>${java.vendor}</Java-Vendor>
								<Os-Name>${os.name}</Os-Name>
								<Os-Arch>${os.arch}</Os-Arch>
								<Os-Version>${os.version}</Os-Version>
								<Scm-Revision>${buildNumber}</Scm-Revision>
							</manifestEntries>
						</archive>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-archetype-plugin</artifactId>
					<version>${version.archetype.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>buildnumber-maven-plugin</artifactId>
					<version>${version.buildnumber.plugin}</version>
				</plugin>
				<plugin>
					<!-- Verifica o checkstyle da danielfcastro -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>${version.checkstyle.plugin}</version>
					<executions>
						<execution>
							<configuration>
								<configLocation>\\nas04\Arq_Info\checkstyle\checkstyle-sonar.xml</configLocation>
								<encoding>UTF-8</encoding>
								<consoleOutput>true</consoleOutput>
								<failsOnError>true</failsOnError>
								<linkXRef>false</linkXRef>
							</configuration>
						</execution>
					</executions>
					<dependencies>
						<dependency>
							<groupId>com.puppycrawl.tools</groupId>
							<artifactId>checkstyle</artifactId>
							<version>${version.checkstyle}</version>
							<exclusions>
								<exclusion>
									<groupId>com.sun</groupId>
									<artifactId>tools</artifactId>
								</exclusion>
							</exclusions>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${version.clean.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${version.maven-compiler-plugin}</version>
					<configuration>
						<showDeprecation>true</showDeprecation>
						<showWarnings>true</showWarnings>
						<source>${maven.compiler.argument.source}</source>
						<target>${maven.compiler.argument.target}</target>
						<testSource>${maven.compiler.argument.testSource}</testSource>
						<testTarget>${maven.compiler.argument.testTarget}</testTarget>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>${version.dependency.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${version.deploy.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${version.failsafe.plugin}</version>
					<executions>
						<!-- Ensures that both integration-test and verify goals of the Failsafe 
							Maven plugin are executed. -->
						<execution>
							<id>integration-tests</id>
							<goals>
								<goal>integration-test</goal>
								<goal>verify</goal>
							</goals>
							<configuration>
								<!-- Sets the VM argument line used when integration tests are run. -->
								<argLine>${failsafeArgLine}</argLine>
								<!-- Skips integration tests if the value of skip.integration.tests 
									property is true -->
								<skipTests>${skip.integration.tests}</skipTests>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>${version.install.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${version.javadoc.plugin}</version>
					<configuration>
						<header>
							<![CDATA[<b>${project.name} ${project.version}</b>]]>
						</header>
						<footer>
							<![CDATA[<b>${project.name} ${project.version}</b>]]>
						</footer>
						<archive>
							<index>true</index>
							<manifest>
								<addDefaultSpecificationEntries>
									true
								</addDefaultSpecificationEntries>
								<addDefaultImplementationEntries>
									true
								</addDefaultImplementationEntries>
							</manifest>
							<manifestEntries>
								<Implementation-URL>${project.url}</Implementation-URL>
								<Java-Version>${java.version}</Java-Version>
								<Java-Vendor>${java.vendor}</Java-Vendor>
								<Os-Name>${os.name}</Os-Name>
								<Os-Arch>${os.arch}</Os-Arch>
								<Os-Version>${os.version}</Os-Version>
								<Scm-Revision>${buildNumber}</Scm-Revision>
							</manifestEntries>
						</archive>
						<additionalparam>${javadoc.additional.params}</additionalparam>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${version.resources.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>${version.site.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>3.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${version.surefire.plugin}</version>
					<configuration>
						<systemProperties>
							<java.io.tmpdir>${project.build.directory}</java.io.tmpdir>
						</systemProperties>
						<!-- Sets the VM argument line used when unit tests are run. -->
						<argLine>${surefireArgLine}</argLine>
						<!-- Skips unit tests if the value of skip.unit.tests property is true -->
						<skipTests>${skip.unit.tests}</skipTests>
						<!-- Excludes integration tests when unit tests are run. -->
						<excludes>
							<exclude>**/IT*.java</exclude>
						</excludes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${version.jacoco-maven-plugin}</version>
					<configuration>
						<append>true</append>
					</configuration>
					<executions>
						<!-- Prepares the property pointing to the JaCoCo runtime agent which 
							is passed as VM argument when Maven the Surefire plugin is executed. -->
						<execution>
							<id>pre-unit-test</id>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
							<configuration>
								<!-- Sets the path to the file which contains the execution data. -->
								<destFile>${jacoco.ut.execution.data.file}</destFile>
								<!-- Sets the name of the property containing the settings for JaCoCo 
									runtime agent. -->
								<propertyName>surefireArgLine</propertyName>
							</configuration>
						</execution>
						<!-- Ensures that the code coverage report for unit tests is created 
							after unit tests have been run. -->
						<execution>
							<id>post-unit-test</id>
							<phase>test</phase>
							<goals>
								<goal>report</goal>
							</goals>
							<configuration>
								<!-- Sets the path to the file which contains the execution data. -->
								<dataFile>${jacoco.ut.execution.data.file}</dataFile>
								<!-- Sets the output directory for the code coverage report. -->
								<outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
							</configuration>
						</execution>
						<!-- Prepares the property pointing to the JaCoCo runtime agent which 
							is passed as VM argument when Maven the Failsafe plugin is executed. -->
						<execution>
							<id>pre-integration-test</id>
							<phase>pre-integration-test</phase>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
							<configuration>
								<!-- Sets the path to the file which contains the execution data. -->
								<destFile>${jacoco.it.execution.data.file}</destFile>
								<!-- Sets the name of the property containing the settings for JaCoCo 
									runtime agent. -->
								<propertyName>failsafeArgLine</propertyName>
							</configuration>
						</execution>
						<!-- Ensures that the code coverage report for integration tests after 
							integration tests have been run. -->
						<execution>
							<id>post-integration-test</id>
							<phase>post-integration-test</phase>
							<goals>
								<goal>report</goal>
							</goals>
							<configuration>
								<!-- Sets the path to the file which contains the execution data. -->
								<dataFile>${jacoco.it.execution.data.file}</dataFile>
								<!-- Sets the output directory for the code coverage report. -->
								<outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<!-- Set properties containing the scm revision -->
			<!-- <plugin><groupId>org.codehaus.mojo</groupId><artifactId>buildnumber-maven-plugin</artifactId><executions><execution><id>get-scm-revision</id><phase>initialize</phase><goals><goal>create</goal></goals><configuration><doCheck>false</doCheck><doUpdate>false</doUpdate><revisionOnScmFailure>UNKNOWN</revisionOnScmFailure><getRevisionOnlyOnce>true</getRevisionOnlyOnce></configuration></execution></executions></plugin> -->
		</plugins>
	</build>
	<scm>
		<url>https://github.com/danielfcastro/parent-pom.git</url>
	</scm>
	<profiles>
		<profile>
			<id>sonar-coverage</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.jacoco</groupId>
							<artifactId>jacoco-maven-plugin</artifactId>
							<version>${version.jacoco-maven-plugin}</version>
						</plugin>
					</plugins>
				</pluginManagement>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<configuration>
							<append>true</append>
						</configuration>
						<executions>
							<execution>
								<id>agent-for-ut</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<organization>
		<name>Daniel Ferreira Castro</name>
		<url>https://github.com/danielfcastro</url>
	</organization>
	<issueManagement>
		<system>GITHUB</system>
		<url>https://github.com/danielfcastro/parent-pom/issues</url>
	</issueManagement>
	<url>https://github.com/danielfcastro/parent-pom</url>
</project>
